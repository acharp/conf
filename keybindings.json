// Place your key bindings in this file to override the defaults
[
    // make interacting with vscode explorer as close as vim NerdTree as possible
    { "key": "ctrl+n", "command": "workbench.action.toggleSidebarVisibility"},
    { "key": "ctrl+cmd+h", "command": "workbench.view.explorer"},
    { "key": "ctrl+c", "command": "workbench.files.action.collapseExplorerFolders"},
    { "key": "ctrl+c", "command": "list.collapseAll"},
    { "key": "j", "command": "list.focusDown", "when": "listFocus" },
    { "key": "k", "command": "list.focusUp", "when": "listFocus" },
    { "key": "enter", "command": "list.collapse", "when": "listFocus && !inputFocus"},
    { "key": "enter", "command": "list.select", "when": "listFocus && !inputFocus"},
    { "key": "shift+i", "command": "extension.peepToggle", "when": "listFocus && !inputFocus"},

    // VSCode specifics
    { "key": "cmd+d", "command": "workbench.view.debug" },
    { "key": "cmd+s", "command": "workbench.view.search", "when": "!searchViewletVisible" },
    { "key": "cmd+o", "command": "outline.focus"},
    { "key": "cmd+h", "command": "editor.action.showHover", "when": "editorTextFocus" },
    // toggle find replace toolbar
    { "key": "ctrl+/", "command": "editor.action.startFindReplaceAction", "when":"editorTextFocus && vim.active && vim.mode == 'Normal'" },
    // format file using the formatter set up
    {"key": "cmd+f", "command": "editor.action.format"},
    // toggle wordWrap
    {"key": "ctrl+w", "command":"editor.action.toggleWordWrap"},
    // add multi cursor to next occurence of the current selected (as a visual selection) element
    // works well only if the element is selected as a vim visual selection
    { "key": "cmd+m", "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },

    // copy absolute path of the current file
    { "key": "ctrl+cmd+p", "command": "copyFilePath" },
    // relative
    { "key": "alt+cmd+p", "command": "copyRelativeFilePath" },

    // ctrlP like in vim
    { "key": "ctrl+p", "command": "workbench.action.quickOpen"},

    // go to definition
    { "key": "cmd+g", "command": "editor.action.revealDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "shift+cmd+g", "command": "editor.action.peekDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
    { "key": "alt+cmd+g", "command": "editor.action.revealDefinitionAside", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "cmd+i", "command": "editor.action.peekImplementation", "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor" },

    // reproduce tmux workflow
    { "key": "ctrl+s n", "command": "workbench.action.previousEditor"},
    { "key": "ctrl+s m", "command": "workbench.action.nextEditor"},
    { "key": "ctrl+s c", "command": "workbench.action.files.newUntitledFile"},
    { "key": "ctrl+s j", "command": "workbench.action.closeActiveEditor"},
    { "key": "ctrl+s left", "command": "workbench.action.moveEditorLeftInGroup"},
    { "key": "ctrl+s right", "command": "workbench.action.moveEditorRightInGroup"},
    { "key": "ctrl+s \\", "command": "workbench.action.splitEditor"},
    { "key": "ctrl+s -", "command": "workbench.action.splitEditorOrthogonal"},
    { "key": "ctrl+h", "command": "workbench.action.focusPreviousGroup"},
    { "key": "ctrl+l", "command": "workbench.action.focusNextGroup"},
    { "key": "ctrl+s 1", "command": "workbench.action.openEditorAtIndex1" },
    { "key": "ctrl+s 2", "command": "workbench.action.openEditorAtIndex2" },
    { "key": "ctrl+s 3", "command": "workbench.action.openEditorAtIndex3" },
    { "key": "ctrl+s 4", "command": "workbench.action.openEditorAtIndex4" },
    { "key": "ctrl+s 5", "command": "workbench.action.openEditorAtIndex5" },
    { "key": "ctrl+s 6", "command": "workbench.action.openEditorAtIndex6" },
    { "key": "ctrl+s 7", "command": "workbench.action.openEditorAtIndex7" },
    { "key": "ctrl+s 8", "command": "workbench.action.openEditorAtIndex8" },
    { "key": "ctrl+s 9", "command": "workbench.action.openEditorAtIndex9" },

    // terminal window
    { "key": "cmd+t", "command": "workbench.action.terminal.toggleTerminal" },
    { "key": "cmd+p", "command": "workbench.action.tasks.toggleProblems" },
    { "key": "ctrl+j", "command": "workbench.action.terminal.focus" },
    { "key": "ctrl+k", "command": "workbench.action.focusActiveEditorGroup", "when": "terminalFocus"},
    { "key": "ctrl+z", "command": "workbench.action.terminal.new" },
    { "key": "ctrl+x", "command": "workbench.action.terminal.kill", "when": "terminalFocus"},
    { "key": "ctrl+l", "command": "workbench.action.terminal.focusNext", "when": "terminalFocus" },
    { "key": "ctrl+h", "command": "workbench.action.terminal.focusPrevious", "when": "terminalFocus" },
    { "key": "cmd+l", "command": "workbench.action.terminal.clear", "when": "terminalFocus" },

    // languages related bindings
    { "key": "ctrl+i", "command": "python.sortImports"},
]
