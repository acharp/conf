# 256 colors for vim
set -g default-terminal "screen-256color"

# Start window numbering at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# remap prefix to Ctrl + s
unbind C-b
set -g prefix C-s
bind C-s send-prefix

# better pane splitting
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'

# destroy pane
bind l kill-pane

# resizing
bind -n M-Left resize-pane -L 6
bind -n M-Right resize-pane -R 6
bind -n M-Down resize-pane -D 3
bind -n M-Up resize-pane -U 3

# new window
bind c new-window -c "#{pane_current_path}"

# turn current pane into new window
bind-key b break-pane -d

# kill window
bind-key k kill-window

# switch between windows m&n, don't ask me why
bind-key n previous-window
bind-key m next-window

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

## Mouse works as expected
set -g mouse on

## Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

## Use the system clipboard
# If the line below crashes your tmux, see:
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
set-option -g default-command "reattach-to-user-namespace bash"

# smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# C-l is taken over by vim style pane navigation
bind C-l send-keys 'C-l'

# this will renumber windows automatically when one gets deleted
set-option -g renumber-windows on

# increase scrollback lines
set -g history-limit 10000

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Put/Paste with p as in vim
unbind p
bind p paste-buffer

## Colors params

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160 #base02, red
