// Place your key bindings in this file to override the defaults
[
    // make interacting with vscode explorer as close as vim NerdTree as possible
    { "key": "ctrl+n", "command": "workbench.action.toggleSidebarVisibility"},
    { "key": "ctrl+cmd+h", "command": "workbench.view.explorer"},
    { "key": "ctrl+c", "command": "workbench.files.action.collapseExplorerFolders"},
    { "key": "ctrl+c", "command": "list.collapseAll"},
    { "key": "j", "command": "list.focusDown", "when": "listFocus" },
    { "key": "k", "command": "list.focusUp", "when": "listFocus" },
    { "key": "enter", "command": "list.collapse", "when": "listFocus && !inputFocus"},
    { "key": "enter", "command": "list.select", "when": "listFocus && !inputFocus"},
    { "key": "shift+i", "command": "toggleexcludedfiles.toggle", "when": "listFocus && !inputFocus"},
    // when in search explorer
    { "key": "ctrl+j", "command": "search.focus.nextInputBox", "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible" },
    { "key": "ctrl+r", "command": "history.showPrevious", "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible" },

    // VSCode specifics
    { "key": "cmd+e", "command": "workbench.view.explorer" },
    { "key": "cmd+d", "command": "workbench.view.debug" },
    { "key": "cmd+s", "command": "workbench.view.search"},
    { "key": "cmd+o", "command": "outline.focus"},
    { "key": "cmd+h", "command": "editor.action.showHover", "when": "editorTextFocus" },
    // toggle find replace toolbar
    { "key": "ctrl+/", "command": "editor.action.startFindReplaceAction", "when":"editorTextFocus && vim.active && vim.mode == 'Normal'" },
    // format file using the formatter set up
    {"key": "cmd+f", "command": "editor.action.format"},
    // toggle wordWrap
    {"key": "ctrl+w", "command":"editor.action.toggleWordWrap"},
    // add multi cursor to next occurence of the word under the cursor
    { "key": "cmd+m", "command": "editor.action.addSelectionToNextFindMatch", "when": "editorFocus" },
    // pressing "gb" also works

    // copy absolute path of the current file
    { "key": "ctrl+cmd+p", "command": "copyFilePath" },
    // relative
    { "key": "alt+cmd+p", "command": "copyRelativeFilePath" },

    // ctrlP like in vim
    { "key": "ctrl+p", "command": "workbench.action.quickOpen"},

    // copy link to GH
    { "key": "cmd+] ]", "command": "extension.copyGitHubLinkToClipboard" },
    // open in GH
    { "key": "cmd+] [", "command": "extension.openInGitHub" },

    // go to definition and reference
    { "key": "cmd+g", "command": "editor.action.revealDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "cmd+k", "command": "editor.action.peekDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
    { "key": "cmd+l", "command": "editor.action.revealDefinitionAside", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "cmd+y", "command": "editor.action.goToReferences", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "cmd+u", "command": "editor.action.goToTypeDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "cmd+i", "command": "editor.action.peekTypeDefinition", "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
    { "key": "cmd+r", "command": "editor.showCallHierarchy", "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor" },

    // send tabs to left or right split
    { "key": "cmd+,", "command": "workbench.action.moveEditorToPreviousGroup" },
    { "key": "cmd+.", "command": "workbench.action.moveEditorToNextGroup" },

    // debug
    { "key": "alt+b", "command": "editor.debug.action.toggleBreakpoint", "when": "editorTextFocus" },
    { "key": "alt+d", "command": "workbench.action.debug.start", "when": "!inDebugMode" },
    { "key": "alt+d", "command": "workbench.action.debug.continue", "when": "inDebugMode" },
    { "key": "alt+s", "command": "workbench.action.debug.stop", "when": "inDebugMode" },
    { "key": "alt+r", "command": "workbench.action.debug.restart", "when": "inDebugMode" },
    { "key": "alt+8", "command": "workbench.action.debug.stepOver", "when": "debugState == 'stopped'" },
    { "key": "alt+9", "command": "workbench.action.debug.stepInto", "when": "debugState != 'inactive'" },
    { "key": "alt+0", "command": "workbench.action.debug.stepOut", "when": "debugState == 'stopped'" },

    // reproduce tmux workflow
    { "key": "ctrl+s n", "command": "workbench.action.previousEditor"},
    { "key": "ctrl+s m", "command": "workbench.action.nextEditor"},
    { "key": "ctrl+s c", "command": "workbench.action.files.newUntitledFile"},
    { "key": "ctrl+s j", "command": "workbench.action.closeActiveEditor"},
    { "key": "ctrl+s left", "command": "workbench.action.moveEditorLeftInGroup"},
    { "key": "ctrl+s right", "command": "workbench.action.moveEditorRightInGroup"},
    { "key": "ctrl+s \\", "command": "workbench.action.splitEditor"},
    { "key": "ctrl+s -", "command": "workbench.action.splitEditorOrthogonal"},
    { "key": "ctrl+h", "command": "workbench.action.focusPreviousGroup"},
    { "key": "ctrl+l", "command": "workbench.action.focusNextGroup"},
    { "key": "ctrl+s 1", "command": "workbench.action.openEditorAtIndex1" },
    { "key": "ctrl+s 2", "command": "workbench.action.openEditorAtIndex2" },
    { "key": "ctrl+s 3", "command": "workbench.action.openEditorAtIndex3" },
    { "key": "ctrl+s 4", "command": "workbench.action.openEditorAtIndex4" },
    { "key": "ctrl+s 5", "command": "workbench.action.openEditorAtIndex5" },
    { "key": "ctrl+s 6", "command": "workbench.action.openEditorAtIndex6" },
    { "key": "ctrl+s 7", "command": "workbench.action.openEditorAtIndex7" },
    { "key": "ctrl+s 8", "command": "workbench.action.openEditorAtIndex8" },
    { "key": "ctrl+s 9", "command": "workbench.action.openEditorAtIndex9" },
    // resize window
    {"key": "alt+up", "command":"workbench.action.increaseViewWidth"},
    {"key": "alt+down", "command":"workbench.action.decreaseViewWidth"},

    // terminal window
    { "key": "cmd+t", "command": "workbench.action.terminal.toggleTerminal" },
    { "key": "cmd+p", "command": "workbench.action.tasks.toggleProblems" },
    { "key": "ctrl+j", "command": "workbench.action.terminal.focus", "when": "editorTextFocus" },
    { "key": "ctrl+k", "command": "workbench.action.focusActiveEditorGroup", "when": "terminalFocus"},
    { "key": "ctrl+z", "command": "workbench.action.terminal.new" },
    { "key": "ctrl+x", "command": "workbench.action.terminal.kill", "when": "terminalFocus"},
    { "key": "ctrl+l", "command": "workbench.action.terminal.focusNext", "when": "terminalFocus" },
    { "key": "ctrl+h", "command": "workbench.action.terminal.focusPrevious", "when": "terminalFocus" },
    { "key": "cmd+l", "command": "workbench.action.terminal.clear", "when": "terminalFocus" },

    // languages related bindings
    { "key": "ctrl+i", "command": "python.sortImports"},

]
